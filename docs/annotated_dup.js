var annotated_dup =
[
    [ "cfg_stm32", "structcfg__stm32.html", "structcfg__stm32" ],
    [ "cfg_txtio", "structcfg__txtio.html", "structcfg__txtio" ],
    [ "cli_buf", "structcli__buf.html", "structcli__buf" ],
    [ "cli_parm", "structcli__parm.html", "structcli__parm" ],
    [ "clpar", "structclpar.html", "structclpar" ],
    [ "Config_Item", "classConfig__Item.html", null ],
    [ "parm_handler", "structparm__handler.html", "structparm__handler" ],
    [ "parm_handlers", "structparm__handlers.html", "structparm__handlers" ],
    [ "Settings", "classSettings.html", "classSettings" ],
    [ "Settings1stBase", "classSettings1stBase.html", "classSettings1stBase" ],
    [ "SettingsBase", "classSettingsBase.html", "classSettingsBase" ],
    [ "SettingsData", "structSettingsData.html", "structSettingsData" ],
    [ "Stm32_Bootloader", "classStm32__Bootloader.html", "classStm32__Bootloader" ],
    [ "stm32_lock_guard", "classstm32__lock__guard.html", "classstm32__lock__guard" ],
    [ "Stm32_Uart", "classStm32__Uart.html", "classStm32__Uart" ],
    [ "Stm32_Uart_ESP32", "classStm32__Uart__ESP32.html", "classStm32__Uart__ESP32" ],
    [ "Stm32_Uart_if", "classStm32__Uart__if.html", "classStm32__Uart__if" ],
    [ "Stm32_Uart_Ts", "classStm32__Uart__Ts.html", "classStm32__Uart__Ts" ],
    [ "Weather", "classWeather.html", "classWeather" ],
    [ "Weather_Adapter_Neutral", "classWeather__Adapter__Neutral.html", "classWeather__Adapter__Neutral" ],
    [ "weather_data", "structweather__data.html", "structweather__data" ],
    [ "Weather_Irrigation", "classWeather__Irrigation.html", "classWeather__Irrigation" ],
    [ "Weather_Provider", "classWeather__Provider.html", "classWeather__Provider" ],
    [ "Weather_Provider_Owm", "classWeather__Provider__Owm.html", "classWeather__Provider__Owm" ],
    [ "Weather_Provider_Random", "classWeather__Provider__Random.html", "classWeather__Provider__Random" ]
];